// @generated by protoc-gen-es v0.1.1 with parameter "target=ts"
// @generated from file example/v1/other.proto (package example.v1, syntax proto3)
/* eslint-disable */
/* @ts-nocheck */

import type {BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage} from "@bufbuild/protobuf";
import {Message, proto3} from "@bufbuild/protobuf";

/**
 * @generated from message example.v1.OtherRequest
 */
export class OtherRequest extends Message<OtherRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<OtherRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "example.v1.OtherRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OtherRequest {
    return new OtherRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OtherRequest {
    return new OtherRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OtherRequest {
    return new OtherRequest().fromJsonString(jsonString, options);
  }

  static equals(a: OtherRequest | PlainMessage<OtherRequest> | undefined, b: OtherRequest | PlainMessage<OtherRequest> | undefined): boolean {
    return proto3.util.equals(OtherRequest, a, b);
  }
}

/**
 * @generated from message example.v1.OtherResponse
 */
export class OtherResponse extends Message<OtherResponse> {
  /**
   * @generated from field: string greeting = 1;
   */
  greeting = "";

  constructor(data?: PartialMessage<OtherResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime = proto3;
  static readonly typeName = "example.v1.OtherResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "greeting", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OtherResponse {
    return new OtherResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OtherResponse {
    return new OtherResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OtherResponse {
    return new OtherResponse().fromJsonString(jsonString, options);
  }

  static equals(a: OtherResponse | PlainMessage<OtherResponse> | undefined, b: OtherResponse | PlainMessage<OtherResponse> | undefined): boolean {
    return proto3.util.equals(OtherResponse, a, b);
  }
}

